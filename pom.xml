<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.halisson.iadoc</groupId>
	<artifactId>ia-documents</artifactId>
	<packaging>pom</packaging>
	<version>${iadoc.version}</version>
	<name>ia-documents</name>
	<description>Projeto consiste em 3 microsserviços principais: Aplicação (upload de documentos e cadastro de perguntas), Documentos (processamento dos documentos) e Perguntas (processamento das perguntas)</description>
	<properties>
		<iadoc.version>0.0.1.14-SNAPSHOT</iadoc.version>
		<java.version>21</java.version>
		<spring.version>3.3.6</spring.version>
		<spring-ai.version>1.0.0-M4</spring-ai.version>
		<spring-cloud.version>2023.0.4</spring-cloud.version>
		<spring-cloud-netflix.version>4.1.4</spring-cloud-netflix.version>
		<spring-batch.version>5.1.2</spring-batch.version>
		<spring-doc.version>2.6.0</spring-doc.version>
		<minio.version>8.5.14</minio.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			
			<!-- Internal dependencies -->
			<dependency>
				<groupId>com.halisson.iadoc</groupId>
				<artifactId>iadoc-library</artifactId>
				<version>${project.version}</version>
				<scope>compile</scope>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
				<version>${spring-cloud-netflix.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				<version>${spring-cloud-netflix.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-gateway</artifactId>
				<version>${spring-cloud-netflix.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-batch</artifactId>
				<version>${spring.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${spring.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-thymeleaf</artifactId>
				<version>${spring.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-devtools</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-hateoas</artifactId>
				<version>${spring.version}</version>
			</dependency>
	
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<optional>true</optional>
				<scope>compile</scope>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-ollama-spring-boot-starter</artifactId>
				<version>${spring-ai.version}</version>
			</dependency>
			<dependency>
	            <groupId>org.springframework.ai</groupId>
	            <artifactId>spring-ai-redis-store-spring-boot-starter</artifactId>
	            <version>${spring-ai.version}</version>
	        </dependency>
			
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<dependency>
			    <groupId>org.springdoc</groupId>
			    <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			    <version>${spring-doc.version}</version>
			</dependency>
			
			<dependency>
				<groupId>io.minio</groupId>
				<artifactId>minio</artifactId>
				<version>${minio.version}</version>
			</dependency>
			
			<!-- Import -->	
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-bom</artifactId>
				<version>${spring-ai.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
			<!-- Test dependencies-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.batch</groupId>
				<artifactId>spring-batch-test</artifactId>
				<version>${spring-batch.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<modules>
		<module>iadoc-library</module>
		<module>microservice-discovery</module>
		<module>microservice-api-gateway</module>
		<module>microservice-application</module>
		<module>microservice-document-processor</module>
		<module>microservice-question-processor</module>
	</modules>
	
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>